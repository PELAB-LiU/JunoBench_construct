{
  "executed": [
    {
      "execution_count": 1,
      "code_cell_id": 0,
      "code": "import os\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport plotly.express as px\n\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.ensemble import RandomForestRegressor\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score\n\npd.set_option('display.max_columns',200)\n%matplotlib inline"
    },
    {
      "execution_count": 2,
      "code_cell_id": 1,
      "code": "path=\"data/For_modeling.csv.zip\""
    },
    {
      "execution_count": 3,
      "code_cell_id": 2,
      "code": "data = pd.read_csv(path,\n dtype={\n 'Duration': 'int8',\n 'Distance': 'int8',\n 'PLong': 'float32',\n 'PLatd': 'float32',\n 'DLong': 'float32',\n 'Haversine':'float32',\n 'Pmonth':'int8',\n 'Pday':'int8',\n 'Phour':'int8',\n 'Pmin':'int8',\n 'PDweek':'int8',\n 'Dmonth':'int8',\n 'Dday':'int8',\n 'Dhour':'int8',\n 'Dmin':'int8',\n 'DDweek':'int8',\n 'Temp':'float32',\n 'Precip':'float32',\n 'Wind':'float32',\n 'Solar':'float32',\n 'Snow':'float32',\n 'GroundTemp':'float32',\n 'Dust':'float32'\n },index_col=0\n\n ).sample(frac=1)\n\ndata.head(25)"
    },
    {
      "execution_count": 4,
      "code_cell_id": 3,
      "code": "data = data.reset_index().drop(columns=['index'])\ndata.head(25)"
    },
    {
      "execution_count": 5,
      "code_cell_id": 8,
      "code": "data[data['Haversine']==0].shape"
    },
    {
      "execution_count": 7,
      "code_cell_id": 11,
      "code": "data= data[data['Haversine']!=0].reset_index().drop(columns=['index'])"
    },
    {
      "execution_count": 8,
      "code_cell_id": 13,
      "code": "data[\"Distance\"]=data['Distance'].apply(lambda x:abs(x))\ndata[data['Distance']<0].shape"
    },
    {
      "execution_count": 9,
      "code_cell_id": 16,
      "code": "data = data[data['Distance']!=0].reset_index().drop(columns=['index'])\ndata[data['Distance']==0].shape"
    }
  ],
  "target": {
    "code_cell_id": 22,
    "code": "data1= pd.Categorical(data['PDweek'], categories=range(7), ordered=True)\n\ndata1 = data1.rename_categories(['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'])\ndata['DayOfWeek'] = data1\n\naverage_duration = data.groupby('DayOfWeek')['Duration'].mean()\n\nplt.plot(average_duration.index, average_duration.values)\nplt.xlabel('Day of Week')\nplt.ylabel('Average Duration')\nplt.title('Average Trip Duration by Day of Week')\nplt.xticks(rotation=45)\nplt.show()"
  }
}